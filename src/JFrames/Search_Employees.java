/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package JFrames;

import JClasses.SQLConnection;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Ravindu
 */
public class Search_Employees extends javax.swing.JFrame {
    PreparedStatement pst;
    Connection con;
    
    /**
     * Creates new form Search_Employees
     */
    public Search_Employees() {
        initComponents();
    }

    Search_Employees(HR_Manager aThis) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDesignation = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFName = new javax.swing.JTextField();
        txtLName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployees = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDepID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTelNo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEpfNo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 500));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "Search Employees", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 24))); // NOI18N
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("ID : ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 94, -1));
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 110, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Designation : ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
        jPanel1.add(txtDesignation, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 110, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("First Name : ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 94, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Last Name : ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 94, -1));
        jPanel1.add(txtFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 110, -1));
        jPanel1.add(txtLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 110, -1));

        tblEmployees.setBackground(new java.awt.Color(204, 255, 204));
        tblEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "F Name", "L Name", "Address", "EPF No", "Tel No", "Email", "Designation", "DepID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeesMouseClicked(evt);
            }
        });
        tblEmployees.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblEmployeesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblEmployeesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployees);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 674, 170));

        btnUpdate.setBackground(new java.awt.Color(0, 0, 204));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 100, 40));

        btnBack.setBackground(new java.awt.Color(255, 51, 51));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 100, 40));

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 130, 100, 40));

        btnSearch.setBackground(new java.awt.Color(51, 0, 204));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 200, 100, 40));

        btnView.setBackground(new java.awt.Color(102, 102, 102));
        btnView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View");
        btnView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewMouseClicked(evt);
            }
        });
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        jPanel1.add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 100, 40));

        btnClear.setBackground(new java.awt.Color(204, 0, 0));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 100, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Dep ID :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 94, -1));
        jPanel1.add(txtDepID, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 130, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Address :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));
        jPanel1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 130, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Tel No :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 94, -1));
        jPanel1.add(txtTelNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 130, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Email :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 94, -1));
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 130, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Epf No :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 94, -1));

        txtEpfNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEpfNoActionPerformed(evt);
            }
        });
        jPanel1.add(txtEpfNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 130, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();        
    }//GEN-LAST:event_btnBackActionPerformed

    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
         Connection con = SQLConnection.getConnection();
         int ID = Integer.parseInt(txtID.getText());
         String DES = txtDesignation.getText();
         String FN = txtFName.getText();
         String LN = txtLName.getText();
         int EN = Integer.parseInt(txtEpfNo.getText());
         int DI = Integer.parseInt(txtDepID.getText());
         String AD = txtAddress.getText();
         int TPN = Integer.parseInt(txtTelNo.getText());
         String EM = txtEmail.getText();
         String sql = "UPDATE employees SET designations='"+DES+"', fname='"+FN+"', lName='"+LN+"', address='"+AD+"', epfNo='"+EN+"', tel='"+TPN+"', email='"+EM+"', depid='"+DI+"' WHERE id="+ID;
         pst = (PreparedStatement) con.prepareStatement(sql);
         pst.executeUpdate();
        
          JOptionPane.showMessageDialog(this,"Employee Details Updated");
          this.dispose();
          Search_Employees se = new Search_Employees();
          se.setVisible(true);
          
        } catch (HeadlessException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        try {
        Connection connection = SQLConnection.getConnection();
        String query = "SELECT id, fname, lname, address, epfNo, tel, email, designations, depid FROM employees";
        
        try (PreparedStatement preparedStatement = (PreparedStatement) connection.prepareStatement(query);
             ResultSet resultSet = preparedStatement.executeQuery()) {

            DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
            model.setRowCount(0); // Clear existing rows

            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("id"),
                    resultSet.getString("fname"),
                    resultSet.getString("lname"),
                    resultSet.getString("address"),
                    resultSet.getInt("epfNo"),
                    resultSet.getInt("tel"),
                    resultSet.getString("email"),
                    resultSet.getString("designations"),
                    resultSet.getInt("depid")
                };
                model.addRow(rowData);
            }

            JOptionPane.showMessageDialog(this, "All employees loaded successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database error", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewMouseClicked
        
    }//GEN-LAST:event_btnViewMouseClicked

    private void tblEmployeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeesMouseClicked
        int row =tblEmployees.getSelectedRow();
        DefaultTableModel MODEL = (DefaultTableModel)tblEmployees.getModel();
        txtID.setText(MODEL.getValueAt(row, 0).toString());
        txtDesignation.setText(MODEL.getValueAt(row, 7).toString());
        txtFName.setText(MODEL.getValueAt(row, 1).toString());
        txtLName.setText(MODEL.getValueAt(row, 2).toString());
        txtEpfNo.setText(MODEL.getValueAt(row, 4).toString());
        txtDepID.setText(MODEL.getValueAt(row, 8).toString());
        txtAddress.setText(MODEL.getValueAt(row, 3).toString());
        txtTelNo.setText(MODEL.getValueAt(row, 5).toString());
        txtEmail.setText(MODEL.getValueAt(row, 6).toString());
    }//GEN-LAST:event_tblEmployeesMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtID.setText("");
        txtDesignation.setText("");
        txtFName.setText("");
        txtLName.setText("");
        txtEpfNo.setText("");
        txtDepID.setText("");
        txtAddress.setText("");
        txtTelNo.setText("");
        txtEmail.setText("");

        // Clear the table
        DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        Connection con = SQLConnection.getConnection();
        try {
            int id = -1;
            String designation = "";
            String fName = "";
            String lName = "";
            int epfNo = -1;
            int depid = -1;
            String address = "";
            int tel = -1;
            String email = "";

            // Check which field is filled and set the appropriate variable
            if (!txtID.getText().isEmpty()) {
                id = Integer.parseInt(txtID.getText());
            } else if (!txtDesignation.getText().isEmpty()) {
                designation = txtDesignation.getText();
            } else if (!txtFName.getText().isEmpty()) {
                fName = txtFName.getText();
            } else if (!txtLName.getText().isEmpty()) {
                lName = txtLName.getText();
            } if (!txtEpfNo.getText().isEmpty()) {
                epfNo = Integer.parseInt(txtEpfNo.getText());
            } if (!txtDepID.getText().isEmpty()) {
                depid = Integer.parseInt(txtDepID.getText());
            } else if (!txtAddress.getText().isEmpty()) {
                address = txtAddress.getText();
            } if (!txtTelNo.getText().isEmpty()) {
                tel = Integer.parseInt(txtTelNo.getText());
            } else if (!txtEmail.getText().isEmpty()) {
                email = txtEmail.getText();
            }

            String sql = "SELECT * FROM employees WHERE id=? OR designations=? OR fname=? OR lname=? OR epfNo=? OR depid=? OR address=? OR tel=? OR email=?";

            try (PreparedStatement pst = (PreparedStatement) con.prepareStatement(sql)) {
                pst.setInt(1, id);
                pst.setString(2, designation);
                pst.setString(3, fName);
                pst.setString(4, lName);
                pst.setInt(5, epfNo);
                pst.setInt(6, depid);
                pst.setString(7, address);
                pst.setInt(8, tel);
                pst.setString(9, email);

                try (ResultSet rs = pst.executeQuery()) {
                    // Create a DefaultTableModel with column names
                    DefaultTableModel model = new DefaultTableModel();
                    model.setColumnIdentifiers(new Object[]{"id", "fname", "lname", "address", "epfNo", "tel", "email", "designations", "depid"});

                    // Populate the table model with data from the ResultSet
                    while (rs.next()) {
                        Object[] rowData = {
                            rs.getInt("id"),
                            rs.getString("fname"),
                            rs.getString("lname"),
                            rs.getString("address"),
                            rs.getInt("epfNo"),
                            rs.getInt("tel"),
                            rs.getString("email"),
                            rs.getString("designations"),
                            rs.getInt("depid")
                        };
                        model.addRow(rowData);
                    }

                    // Set the table model to the JTable
                    tblEmployees.setModel(model);

                    // Check if any results were found
                    if (model.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(null, "No matching records found.", "No Results", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        // After displaying the details in the table, fill the text fields with the first row data
                        txtID.setText(String.valueOf(model.getValueAt(0, 0)));
                        txtDesignation.setText(String.valueOf(model.getValueAt(0,7)));
                        txtFName.setText(String.valueOf(model.getValueAt(0, 1)));
                        txtLName.setText(String.valueOf(model.getValueAt(0, 2)));
                        txtEpfNo.setText(String.valueOf(model.getValueAt(0, 4)));
                        txtDepID.setText(String.valueOf(model.getValueAt(0, 8)));
                        txtAddress.setText(String.valueOf(model.getValueAt(0, 3)));
                        txtTelNo.setText(String.valueOf(model.getValueAt(0, 5)));
                        txtEmail.setText(String.valueOf(model.getValueAt(0, 6)));
                        
                        // Add more fields as needed
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Search_Employees.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            Connection connection = SQLConnection.getConnection();
            int selectedRow = tblEmployees.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row to delete", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String id = tblEmployees.getValueAt(selectedRow, 0).toString(); // Assuming the ID is in the first column

            int confirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this employee?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

            if (confirmDialog == JOptionPane.YES_OPTION) {
                String query = "DELETE FROM employees WHERE id=?";

                try (PreparedStatement preparedStatement = (PreparedStatement) connection.prepareStatement(query)) {
                    preparedStatement.setInt(1, Integer.parseInt(id));

                    int result = preparedStatement.executeUpdate();

                    if (result > 0) {
                        JOptionPane.showMessageDialog(this, "Employee deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        // Update the JTable with the new data
                        updateTable();
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to delete employee", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

        private void updateTable() {
            // Logic to refresh the JTable with updated data from the database
            DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
            model.setRowCount(0); // Clear existing rows

            try {
                Connection connection = SQLConnection.getConnection();
                String query = "SELECT id, fname, lname, address, epfNo, tel, email, designations, depid FROM employees";

                try (PreparedStatement preparedStatement = (PreparedStatement) connection.prepareStatement(query);
                     ResultSet resultSet = preparedStatement.executeQuery()) {

                    while (resultSet.next()) {
                        Object[] rowData = {
                            resultSet.getInt("id"),
                            resultSet.getString("fname"),
                            resultSet.getString("lname"),
                            resultSet.getString("address"),
                            resultSet.getInt("epfNo"),
                            resultSet.getInt("tel"),
                            resultSet.getString("email"),
                            resultSet.getString("designations"),
                            resultSet.getInt("depid")
                        };
                        model.addRow(rowData);
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Database error", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblEmployeesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblEmployeesKeyPressed
        int row =tblEmployees.getSelectedRow();
        DefaultTableModel MODEL = (DefaultTableModel)tblEmployees.getModel();
        txtID.setText(MODEL.getValueAt(row, 0).toString());
        txtDesignation.setText(MODEL.getValueAt(row, 7).toString());
        txtFName.setText(MODEL.getValueAt(row, 1).toString());
        txtLName.setText(MODEL.getValueAt(row, 2).toString());
        txtEpfNo.setText(MODEL.getValueAt(row, 4).toString());
        txtDepID.setText(MODEL.getValueAt(row, 8).toString());
        txtAddress.setText(MODEL.getValueAt(row, 3).toString());
        txtTelNo.setText(MODEL.getValueAt(row, 5).toString());
        txtEmail.setText(MODEL.getValueAt(row, 6).toString());
    }//GEN-LAST:event_tblEmployeesKeyPressed

    private void tblEmployeesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblEmployeesKeyReleased
        int row =tblEmployees.getSelectedRow();
        DefaultTableModel MODEL = (DefaultTableModel)tblEmployees.getModel();
        txtID.setText(MODEL.getValueAt(row, 0).toString());
        txtDesignation.setText(MODEL.getValueAt(row, 7).toString());
        txtFName.setText(MODEL.getValueAt(row, 1).toString());
        txtLName.setText(MODEL.getValueAt(row, 2).toString());
        txtEpfNo.setText(MODEL.getValueAt(row, 4).toString());
        txtDepID.setText(MODEL.getValueAt(row, 8).toString());
        txtAddress.setText(MODEL.getValueAt(row, 3).toString());
        txtTelNo.setText(MODEL.getValueAt(row, 5).toString());
        txtEmail.setText(MODEL.getValueAt(row, 6).toString());
    }//GEN-LAST:event_tblEmployeesKeyReleased

    private void txtEpfNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEpfNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEpfNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Search_Employees().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmployees;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDepID;
    private javax.swing.JTextField txtDesignation;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEpfNo;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtTelNo;
    // End of variables declaration//GEN-END:variables

    
}
